import { useState, useEffect } from "react";
import styles from "./LandingPageMain.module.css";
import clsx from "clsx";
import heroImage from "../../assets/images/hero.png";
// import heroCourseImage from "../../assets/images/course-6.jpg";
import trustedImage1 from "../../assets/images/course-1.jpg";
import trustedImage2 from "../../assets/images/course-2.jpg";
import trustedImage3 from "../../assets/images/course-3.jpg";
import trustedImage4 from "../../assets/images/course-4.jpg";
import awardIcon from "../../assets/images/award_icon.svg";
import graduationCapImage from "../../assets/images/graduation-cap.png";
import aboutImage from "../../assets/images/about-banner.jpg";
import courseImage1 from "../../assets/images/course-2.jpg";
import courseImage2 from "../../assets/images/course-5.jpg";
import courseImage3 from "../../assets/images/course-6.jpg";
import storyImage1small from "../../assets/images/story-1-small.jpg";
import storyImage1big from "../../assets/images/story-1-big.jpg";
import storyImage2small from "../../assets/images/story-2-small.jpg";
import storyImage2big from "../../assets/images/story-2-big.jpg";
import storyImage3small from "../../assets/images/story-3-small.jpg";
import storyImage3big from "../../assets/images/story-3-big.jpg";
import blogImage1 from "../../assets/images/blog-1-image.jpg";
import blogImage2 from "../../assets/images/blog-2-image.jpg";
import blogImage3 from "../../assets/images/blog-3-image.jpg";
import { useNavigate } from "react-router-dom";

const blogs = [
  {
    image: blogImage1,
    title: "Build Responsive Real-World Websites with HTML",
    time: "10th April, 2024",
    comments: 20,
    description:
      "Become a great Web Developer using these skills and techniques",
  },
  {
    image: blogImage2,
    title: "Mastering CSS: From Basics to Advanced Techniques",
    time: "15th April, 2024",
    comments: 15,
    description: "Learn how to create stunning web designs with CSS",
  },
  {
    image: blogImage3,
    title: "JavaScript Essentials for Modern Web Development",
    time: "20th April, 2024",
    comments: 30,
    description: "Dive into JavaScript and enhance your web development skills",
  },
];

const trustedImages = [
  trustedImage1,
  trustedImage2,
  trustedImage3,
  trustedImage4,
];

const whyChooseUsArr = [
  {
    svg: (
      <svg
        width="18"
        height="18"
        viewBox="0 0 18 18"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M6.5 13.5L13.5 9L6.5 4.5V13.5ZM2 18C1.45 18 0.979167 17.8042 0.5875 17.4125C0.195833 17.0208 0 16.55 0 16V2C0 1.45 0.195833 0.979167 0.5875 0.5875C0.979167 0.195833 1.45 0 2 0H16C16.55 0 17.0208 0.195833 17.4125 0.5875C17.8042 0.979167 18 1.45 18 2V16C18 16.55 17.8042 17.0208 17.4125 17.4125C17.0208 17.8042 16.55 18 16 18H2ZM2 16H16V2H2V16Z"
          fill="#535AE5"
        />
      </svg>
    ),
    title: "HD Video Lessons",
    description:
      "Access high-quality video content. Download for offline viewing",
  },
  {
    svg: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M2 20V17.2C2 16.65 2.14167 16.1333 2.425 15.65C2.70833 15.1667 3.1 14.8 3.6 14.55C4.45 14.1167 5.40833 13.75 6.475 13.45C7.54167 13.15 8.71667 13 10 13C10.5 13 10.9875 13.025 11.4625 13.075C11.9375 13.125 12.4 13.2 12.85 13.3L11.1 15.05C10.9167 15.0167 10.7375 15 10.5625 15H10C8.81667 15 7.75417 15.1417 6.8125 15.425C5.87083 15.7083 5.1 16.0167 4.5 16.35C4.35 16.4333 4.22917 16.55 4.1375 16.7C4.04583 16.85 4 17.0167 4 17.2V18H10.25L12.25 20H2ZM15.55 20.4L12.1 16.95L13.5 15.55L15.55 17.6L20.6 12.55L22 13.95L15.55 20.4ZM10 12C8.9 12 7.95833 11.6083 7.175 10.825C6.39167 10.0417 6 9.1 6 8C6 6.9 6.39167 5.95833 7.175 5.175C7.95833 4.39167 8.9 4 10 4C11.1 4 12.0417 4.39167 12.825 5.175C13.6083 5.95833 14 6.9 14 8C14 9.1 13.6083 10.0417 12.825 10.825C12.0417 11.6083 11.1 12 10 12ZM10 10C10.55 10 11.0208 9.80417 11.4125 9.4125C11.8042 9.02083 12 8.55 12 8C12 7.45 11.8042 6.97917 11.4125 6.5875C11.0208 6.19583 10.55 6 10 6C9.45 6 8.97917 6.19583 8.5875 6.5875C8.19583 6.97917 8 7.45 8 8C8 8.55 8.19583 9.02083 8.5875 9.4125C8.97917 9.80417 9.45 10 10 10Z"
          fill="#535AE5"
        />
      </svg>
    ),
    title: "Expert Instructors",
    description: "Learn from industry professionals with years of experience.",
  },
  {
    svg: (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M3 21V7H9V5L12 2L15 5V11H21V21H3ZM5 19H7V17H5V19ZM5 15H7V13H5V15ZM5 11H7V9H5V11ZM11 19H13V17H11V19ZM11 15H13V13H11V15ZM11 11H13V9H11V11ZM11 7H13V5H11V7ZM17 19H19V17H17V19ZM17 15H19V13H17V15Z"
          fill="#535AE5"
        />
      </svg>
    ),
    title: "Community Support",
    description:
      "Join discussion forums, participate in live Q&A sessions with friends.",
  },
  {
    svg: (
      <svg
        width="16"
        height="21"
        viewBox="0 0 16 21"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M5.675 11.7L6.55 8.85L4.25 7H7.1L8 4.2L8.9 7H11.75L9.425 8.85L10.3 11.7L8 9.925L5.675 11.7ZM2 21V13.275C1.36667 12.575 0.875 11.775 0.525 10.875C0.175 9.975 0 9.01667 0 8C0 5.76667 0.775 3.875 2.325 2.325C3.875 0.775 5.76667 0 8 0C10.2333 0 12.125 0.775 13.675 2.325C15.225 3.875 16 5.76667 16 8C16 9.01667 15.825 9.975 15.475 10.875C15.125 11.775 14.6333 12.575 14 13.275V21L8 19L2 21ZM8 14C9.66667 14 11.0833 13.4167 12.25 12.25C13.4167 11.0833 14 9.66667 14 8C14 6.33333 13.4167 4.91667 12.25 3.75C11.0833 2.58333 9.66667 2 8 2C6.33333 2 4.91667 2.58333 3.75 3.75C2.58333 4.91667 2 6.33333 2 8C2 9.66667 2.58333 11.0833 3.75 12.25C4.91667 13.4167 6.33333 14 8 14ZM4 18.025L8 17L12 18.025V14.925C11.4167 15.2583 10.7875 15.5208 10.1125 15.7125C9.4375 15.9042 8.73333 16 8 16C7.26667 16 6.5625 15.9042 5.8875 15.7125C5.2125 15.5208 4.58333 15.2583 4 14.925V18.025Z"
          fill="#535AE5"
        />
      </svg>
    ),
    title: "Certificates",
    description:
      "Earn industry-recognized certificates upon course completion.",
  },
];

const categories = [
  {
    text: "Web Application Development",
    svgBgColor: "#FA6C6C",
    cardBgColor: "#F9F0F0",
    svg: (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M2.20453 2.20453C2.48165 1.9274 2.88302 1.81447 3.26399 1.90643L23.5243 6.79685C23.56 6.80546 23.596 6.81405 23.6321 6.82268C24.0597 6.92474 24.5159 7.03363 24.9008 7.28455C25.2354 7.50277 25.5158 7.79449 25.7207 8.13749C25.9562 8.53191 26.0471 8.99208 26.1322 9.42334C26.1394 9.45983 26.1465 9.49611 26.1537 9.53213L27.7674 17.6006C28.2722 17.4539 28.8101 17.462 29.3112 17.6248C29.6799 17.7446 29.9695 17.9497 30.2141 18.1573C30.4409 18.3498 30.6917 18.6006 30.9647 18.8737L32.1262 20.0352C32.3994 20.3083 32.6502 20.5592 32.8428 20.786C33.0504 21.0305 33.2554 21.3201 33.3752 21.6889C33.5465 22.2161 33.5465 22.784 33.3752 23.3112C33.2554 23.6799 33.0504 23.9695 32.8428 24.2141C32.6503 24.4408 32.3994 24.6916 32.1264 24.9647L24.9648 32.1262C24.6917 32.3994 24.4409 32.6502 24.2141 32.8428C23.9695 33.0504 23.6799 33.2554 23.3112 33.3752C22.784 33.5465 22.2161 33.5465 21.6889 33.3752C21.3201 33.2554 21.0305 33.0504 20.786 32.8428C20.5592 32.6503 20.3084 32.3994 20.0354 32.1264L18.8737 30.9647C18.6006 30.6917 18.3498 30.4409 18.1573 30.2141C17.9497 29.9695 17.7446 29.6799 17.6248 29.3112C17.462 28.8101 17.4539 28.2722 17.6006 27.7674L9.53213 26.1537C9.49611 26.1465 9.45983 26.1394 9.42334 26.1322C8.99208 26.0471 8.53191 25.9562 8.13749 25.7207C7.79449 25.5158 7.50277 25.2354 7.28455 24.9008C7.03363 24.5159 6.92474 24.0597 6.82268 23.6321C6.81405 23.596 6.80546 23.56 6.79685 23.5243L1.90643 3.26399C1.81447 2.88302 1.9274 2.48165 2.20453 2.20453ZM19.1303 25.7788L25.7788 19.1303L23.9474 9.97338C23.8902 9.68745 23.857 9.52411 23.8246 9.40288C23.8047 9.32832 23.7921 9.29811 23.7884 9.29022C23.7594 9.24192 23.7198 9.20079 23.6727 9.16988C23.665 9.16587 23.6353 9.15208 23.5616 9.12922C23.4417 9.09207 23.2798 9.05245 22.9963 8.98403L6.62278 5.03179L14.4887 12.8977C15.0837 12.5648 15.7697 12.375 16.5 12.375C18.7782 12.375 20.625 14.2218 20.625 16.5C20.625 18.7782 18.7782 20.625 16.5 20.625C14.2218 20.625 12.375 18.7782 12.375 16.5C12.375 15.7697 12.5648 15.0837 12.8977 14.4887L5.03179 6.62278L8.98403 22.9963C9.05245 23.2798 9.09207 23.4417 9.12922 23.5616C9.15208 23.6353 9.16587 23.665 9.16988 23.6727C9.20079 23.7198 9.24191 23.7594 9.29021 23.7884C9.29809 23.7921 9.32829 23.8047 9.40288 23.8246C9.52411 23.857 9.68745 23.8902 9.97338 23.9474L19.1303 25.7788ZM9.28799 23.7873C9.28811 23.7873 9.28895 23.7877 9.29021 23.7884L9.28799 23.7873ZM9.1711 23.6749C9.17108 23.6749 9.17063 23.6742 9.16988 23.6727L9.1711 23.6749ZM15.1563 15.1923C14.8275 15.5301 14.625 15.9914 14.625 16.5C14.625 17.5356 15.4645 18.375 16.5 18.375C17.5356 18.375 18.375 17.5356 18.375 16.5C18.375 15.4645 17.5356 14.625 16.5 14.625C15.9914 14.625 15.5301 14.8275 15.1923 15.1563C15.1865 15.1624 15.1805 15.1685 15.1745 15.1745C15.1685 15.1805 15.1624 15.1865 15.1563 15.1923ZM23.7873 9.28798C23.7873 9.28793 23.7877 9.28871 23.7884 9.29022L23.7873 9.28798ZM28.3927 19.7614C28.3928 19.7614 28.392 19.7618 28.3903 19.7625L28.3927 19.7614ZM28.3903 19.7625C28.378 19.769 28.3326 19.7958 28.2421 19.8725C28.094 19.9983 27.9086 20.1824 27.5985 20.4926L20.4926 27.5985C20.1824 27.9086 19.9983 28.094 19.8725 28.2421C19.7958 28.3326 19.7696 28.3767 19.7631 28.389C19.7407 28.4613 19.7407 28.5387 19.7631 28.611C19.7696 28.6233 19.7957 28.6675 19.8725 28.7579C19.9983 28.9061 20.1824 29.0914 20.4926 29.4016L21.5985 30.5075C21.9086 30.8176 22.094 31.0018 22.2421 31.1275C22.3325 31.2043 22.3767 31.2304 22.389 31.2369C22.4613 31.2593 22.5387 31.2593 22.611 31.2369C22.6234 31.2304 22.6675 31.2043 22.7579 31.1275C22.9061 31.0018 23.0914 30.8176 23.4016 30.5075L30.5075 23.4016C30.8176 23.0914 31.0018 22.9061 31.1275 22.7579C31.2043 22.6675 31.2304 22.6233 31.2369 22.611C31.2593 22.5387 31.2593 22.4613 31.2369 22.389C31.2304 22.3767 31.2043 22.3325 31.1275 22.2421C31.0018 22.094 30.8176 21.9086 30.5075 21.5985L29.4016 20.4926C29.0914 20.1824 28.9061 19.9983 28.7579 19.8725C28.6675 19.7958 28.6233 19.7696 28.611 19.7631C28.5387 19.7407 28.4626 19.7401 28.3903 19.7625ZM22.3927 31.2387C22.3927 31.2387 22.392 31.2384 22.3905 31.2377L22.3927 31.2387Z"
          fill="white"
        />
      </svg>
    ),
  },
  {
    text: "Artificial Intelligence",
    svgBgColor: "#9674F6",
    cardBgColor: "#ECE8FB",
    svg: (
      <svg
        width="37"
        height="32"
        viewBox="0 0 37 32"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M4.63875 21.2221C3.34264 21.2221 2.24542 20.7711 1.34708 19.8692C0.449028 18.9672 0 17.8719 0 16.5833C0 15.2947 0.450972 14.1994 1.35292 13.2975C2.25486 12.3956 3.35014 11.9446 4.63875 11.9446V7.41667C4.63875 6.66667 4.91431 6.01625 5.46542 5.46542C6.01625 4.9143 6.66667 4.63875 7.41667 4.63875H13.6946C13.6946 3.34264 14.1456 2.24542 15.0475 1.34708C15.9494 0.449028 17.0447 0 18.3333 0C19.6219 0 20.7172 0.450971 21.6192 1.35292C22.5211 2.25486 22.9721 3.35014 22.9721 4.63875H29.25C30 4.63875 30.6504 4.9143 31.2013 5.46542C31.7524 6.01625 32.0279 6.66667 32.0279 7.41667V11.9446C33.324 11.9446 34.4212 12.3956 35.3196 13.2975C36.2176 14.1994 36.6667 15.2947 36.6667 16.5833C36.6667 17.8719 36.2157 18.9672 35.3138 19.8692C34.4118 20.7711 33.3165 21.2221 32.0279 21.2221V28.8888C32.0279 29.6388 31.7524 30.2893 31.2013 30.8404C30.6504 31.3912 30 31.6667 29.25 31.6667H7.41667C6.66667 31.6667 6.01625 31.3912 5.46542 30.8404C4.91431 30.2893 4.63875 29.6388 4.63875 28.8888V21.2221ZM12.8675 17.3333C13.4094 17.3333 13.8679 17.1436 14.2429 16.7642C14.6179 16.385 14.8054 15.9244 14.8054 15.3825C14.8054 14.8406 14.6158 14.3821 14.2367 14.0071C13.8572 13.6321 13.3965 13.4446 12.8546 13.4446C12.3126 13.4446 11.8542 13.6342 11.4792 14.0133C11.1042 14.3928 10.9167 14.8535 10.9167 15.3954C10.9167 15.9374 11.1064 16.3958 11.4858 16.7708C11.865 17.1458 12.3256 17.3333 12.8675 17.3333ZM23.8121 17.3333C24.354 17.3333 24.8125 17.1436 25.1875 16.7642C25.5625 16.385 25.75 15.9244 25.75 15.3825C25.75 14.8406 25.5603 14.3821 25.1808 14.0071C24.8017 13.6321 24.3411 13.4446 23.7992 13.4446C23.2572 13.4446 22.7987 13.6342 22.4237 14.0133C22.0487 14.3928 21.8612 14.8535 21.8612 15.3954C21.8612 15.9374 22.0508 16.3958 22.43 16.7708C22.8094 17.1458 23.2701 17.3333 23.8121 17.3333ZM11.4446 24.8613H25.2221V22.0833H11.4446V24.8613ZM7.41667 28.8888H29.25V7.41667H7.41667V28.8888Z"
          fill="white"
        />
      </svg>
    ),
  },
  {
    text: "GES-related Courses Primary - S.H.S.",
    svgBgColor: "#51BD9C",
    cardBgColor: "#E3FDFB",
    svg: (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M7.75435 4.875H25.2456C26.0469 4.87499 26.7157 4.87497 27.262 4.91961C27.8318 4.96617 28.3668 5.06684 28.8727 5.3246C29.6489 5.72008 30.2799 6.35112 30.6754 7.1273C30.9332 7.63319 31.0338 8.16817 31.0804 8.738C31.125 9.28434 31.125 9.9531 31.125 10.7543V13.2813C32.6063 13.7008 33.7418 14.9173 34.0457 16.4453C34.1256 16.8465 34.1253 17.301 34.125 17.8901C34.125 17.9262 34.125 17.9628 34.125 18C34.125 18.0372 34.125 18.0738 34.125 18.1099C34.1253 18.699 34.1256 19.1535 34.0457 19.5547C33.7418 21.0827 32.6063 22.2992 31.125 22.7187V25.2457C31.125 26.0469 31.125 26.7157 31.0804 27.262C31.0338 27.8318 30.9332 28.3668 30.6754 28.8727C30.2799 29.6489 29.6489 30.2799 28.8727 30.6754C28.3668 30.9332 27.8318 31.0338 27.262 31.0804C26.7157 31.125 26.0469 31.125 25.2457 31.125H7.75432C6.9531 31.125 6.28434 31.125 5.738 31.0804C5.16817 31.0338 4.63318 30.9332 4.12729 30.6754C3.35112 30.2799 2.72008 29.6489 2.3246 28.8727C2.06683 28.3668 1.96617 27.8318 1.91961 27.262C1.87497 26.7157 1.87498 26.0469 1.875 25.2457V10.7543C1.87498 9.95312 1.87497 9.28435 1.91961 8.738C1.96617 8.16817 2.06683 7.63318 2.3246 7.12729C2.72008 6.35112 3.35112 5.72008 4.12729 5.3246C4.63318 5.06683 5.16817 4.96617 5.738 4.91961C6.28435 4.87497 6.95312 4.87498 7.75435 4.875ZM28.875 22.875H26.25C26.2129 22.875 26.1762 22.875 26.1401 22.875C25.551 22.8753 25.0965 22.8756 24.6953 22.7957C23.0589 22.4702 21.7798 21.1911 21.4543 19.5547C21.3744 19.1535 21.3747 18.699 21.375 18.1099C21.375 18.0738 21.375 18.0372 21.375 18C21.375 17.9628 21.375 17.9262 21.375 17.8901C21.3747 17.301 21.3744 16.8465 21.4543 16.4453C21.7798 14.8089 23.0589 13.5298 24.6953 13.2043C25.0965 13.1244 25.551 13.1247 26.1401 13.125C26.1762 13.125 26.2128 13.125 26.25 13.125H28.875V10.8C28.875 9.94136 28.8741 9.36504 28.8379 8.92122C28.8027 8.49054 28.7399 8.28461 28.6706 8.14877C28.4909 7.79597 28.204 7.50913 27.8512 7.32937C27.7154 7.26015 27.5095 7.19733 27.0788 7.16214C26.635 7.12588 26.0586 7.125 25.2 7.125H7.8C6.94136 7.125 6.36504 7.12588 5.92122 7.16214C5.49053 7.19733 5.28461 7.26015 5.14877 7.32936C4.79597 7.50913 4.50913 7.79597 4.32936 8.14877C4.26015 8.28461 4.19733 8.49053 4.16214 8.92122C4.12588 9.36504 4.125 9.94136 4.125 10.8V25.2C4.125 26.0586 4.12588 26.635 4.16214 27.0788C4.19733 27.5095 4.26015 27.7154 4.32936 27.8512C4.50913 28.204 4.79596 28.4909 5.14877 28.6706C5.28461 28.7399 5.49053 28.8027 5.92122 28.8379C6.36504 28.8741 6.94136 28.875 7.8 28.875H25.2C26.0586 28.875 26.635 28.8741 27.0788 28.8379C27.5095 28.8027 27.7154 28.7399 27.8512 28.6706C28.204 28.4909 28.4909 28.204 28.6706 27.8512C28.7399 27.7154 28.8027 27.5095 28.8379 27.0788C28.8741 26.635 28.875 26.0586 28.875 25.2V22.875ZM26.25 15.375C25.4991 15.375 25.2879 15.3805 25.1342 15.411C24.3904 15.559 23.809 16.1404 23.661 16.8842C23.6305 17.0379 23.625 17.2491 23.625 18C23.625 18.7509 23.6305 18.9621 23.661 19.1158C23.809 19.8596 24.3904 20.441 25.1342 20.589C25.2879 20.6196 25.4991 20.625 26.25 20.625H29.25C30.0009 20.625 30.2121 20.6196 30.3658 20.589C31.1096 20.441 31.691 19.8596 31.839 19.1158C31.8696 18.9621 31.875 18.7509 31.875 18C31.875 17.2491 31.8696 17.0379 31.839 16.8842C31.691 16.1404 31.1096 15.559 30.3658 15.411C30.2121 15.3805 30.0009 15.375 29.25 15.375H26.25Z"
          fill="white"
        />
      </svg>
    ),
  },
  {
    text: "Social Science Courses",
    svgBgColor: "#63B4F8",
    cardBgColor: "#E3FDFB",
    svg: (
      <svg
        width="40"
        height="40"
        viewBox="0 0 40 40"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clip-path="url(#clip0_66_8)">
          <path
            d="M14.3333 37.2638C13.0186 37.2638 11.8496 36.8888 10.8263 36.1388C9.8032 35.3888 9.06015 34.4027 8.59709 33.1805C8.15265 33.8566 7.60403 34.3821 6.95126 34.7571C6.29848 35.1321 5.55542 35.3196 4.72209 35.3196C3.37959 35.3196 2.26153 34.852 1.36792 33.9167C0.47459 32.9814 0.0279236 31.8657 0.0279236 30.5696C0.0279236 29.2641 0.439868 28.1877 1.26376 27.3405C2.08792 26.4932 3.13431 26.0371 4.40292 25.9721C3.93987 25.4166 3.58098 24.7893 3.32626 24.0905C3.07181 23.3913 2.94459 22.676 2.94459 21.9446C2.94459 20.8705 3.22001 19.8657 3.77084 18.9305C4.32167 17.9955 5.10181 17.2409 6.11126 16.6667C6.25015 17.0742 6.42834 17.5117 6.64584 17.9792C6.86334 18.4467 7.09709 18.8518 7.34709 19.1946C6.84709 19.5371 6.45362 19.956 6.16667 20.4513C5.87973 20.9468 5.73626 21.4677 5.73626 22.0138C5.73626 23.6435 6.3982 24.6621 7.72209 25.0696C9.04626 25.4768 10.3149 25.8009 11.5279 26.0417L12.0971 27.0138C11.7732 27.9582 11.5047 28.743 11.2917 29.368C11.0786 29.993 10.9721 30.5648 10.9721 31.0834C10.9721 31.9909 11.3078 32.7849 11.9792 33.4655C12.6506 34.146 13.4446 34.4863 14.3613 34.4863C15.4724 34.4863 16.389 34.0093 17.1113 33.0555C17.8335 32.1018 18.4214 30.9723 18.875 29.6667C19.3286 28.3612 19.6782 27.0417 19.9238 25.7084C20.169 24.375 20.3704 23.3427 20.5279 22.6113L23.2221 23.3471C22.9721 24.5602 22.6758 25.963 22.3333 27.5555C21.9908 29.1482 21.5024 30.6645 20.8679 32.1042C20.2338 33.5439 19.4004 34.7638 18.3679 35.7638C17.3357 36.7638 15.9908 37.2638 14.3333 37.2638ZM4.75001 32.5417C5.2964 32.5417 5.75709 32.3542 6.13209 31.9792C6.50709 31.6042 6.69459 31.1435 6.69459 30.5971C6.69459 30.051 6.50709 29.5905 6.13209 29.2155C5.75709 28.8405 5.2964 28.653 4.75001 28.653C4.20362 28.653 3.74292 28.8405 3.36792 29.2155C2.99292 29.5905 2.80542 30.051 2.80542 30.5971C2.80542 31.1435 2.99292 31.6042 3.36792 31.9792C3.74292 32.3542 4.20362 32.5417 4.75001 32.5417ZM17.0279 25.0696C15.7685 23.9491 14.6226 22.905 13.5904 21.9375C12.5579 20.97 11.6713 20.0256 10.9304 19.1042C10.1899 18.1828 9.6182 17.2707 9.21542 16.368C8.81265 15.4652 8.61126 14.5138 8.61126 13.5138C8.61126 11.801 9.20612 10.3496 10.3958 9.15963C11.5856 7.9699 13.037 7.37504 14.75 7.37504C14.9536 7.37504 15.1435 7.38199 15.3196 7.39587C15.4954 7.40976 15.676 7.43518 15.8613 7.47213C15.6574 7.0649 15.5092 6.70379 15.4167 6.38879C15.3242 6.07407 15.2779 5.75462 15.2779 5.43046C15.2779 4.11574 15.7363 3.00004 16.6529 2.08337C17.5696 1.16671 18.6853 0.708374 20 0.708374C21.3147 0.708374 22.4304 1.16671 23.3471 2.08337C24.2638 3.00004 24.7221 4.11574 24.7221 5.43046C24.7221 5.73601 24.6804 6.04851 24.5971 6.36796C24.5138 6.6874 24.361 7.05087 24.1388 7.45837C24.324 7.42143 24.5046 7.39824 24.6804 7.38879C24.8565 7.37962 25.0464 7.37504 25.25 7.37504C26.8611 7.37504 28.2268 7.89129 29.3471 8.92379C30.4676 9.95601 31.1204 11.236 31.3054 12.7638C30.8796 12.7177 30.4143 12.6992 29.9096 12.7084C29.4051 12.7175 28.9353 12.7499 28.5 12.8055C28.3425 12.0371 27.9745 11.403 27.3958 10.903C26.8172 10.403 26.102 10.153 25.25 10.153C24.2408 10.153 23.4468 10.4377 22.8679 11.0071C22.2893 11.5766 21.5093 12.4307 20.5279 13.5696H19.4304C18.4213 12.3752 17.6274 11.5071 17.0488 10.9655C16.4699 10.4238 15.7036 10.153 14.75 10.153C13.787 10.153 12.986 10.4724 12.3471 11.1113C11.7082 11.7502 11.3888 12.551 11.3888 13.5138C11.3888 14.1713 11.5693 14.8449 11.9304 15.5346C12.2915 16.2246 12.8032 16.9607 13.4654 17.743C14.1274 18.5255 14.9282 19.3518 15.8679 20.2221C16.8079 21.0927 17.8565 22.0464 19.0138 23.0834L17.0279 25.0696ZM20 7.37504C20.5464 7.37504 21.0071 7.18754 21.3821 6.81254C21.7571 6.43754 21.9446 5.97685 21.9446 5.43046C21.9446 4.88435 21.7571 4.42379 21.3821 4.04879C21.0071 3.67379 20.5464 3.48629 20 3.48629C19.4536 3.48629 18.9929 3.67379 18.6179 4.04879C18.2429 4.42379 18.0554 4.88435 18.0554 5.43046C18.0554 5.97685 18.2429 6.43754 18.6179 6.81254C18.9929 7.18754 19.4536 7.37504 20 7.37504ZM25.625 37.2917C25.0139 37.2917 24.4097 37.1991 23.8125 37.0138C23.2153 36.8288 22.6389 36.5464 22.0833 36.1667C22.3333 35.8148 22.5833 35.412 22.8333 34.9584C23.0833 34.5048 23.2963 34.0835 23.4721 33.6946C23.8332 33.963 24.199 34.162 24.5696 34.2917C24.9399 34.4214 25.3149 34.4863 25.6946 34.4863C26.639 34.4863 27.4376 34.146 28.0904 33.4655C28.7432 32.7849 29.0696 31.9863 29.0696 31.0696C29.0696 30.5232 28.9585 29.9399 28.7363 29.3196C28.514 28.6991 28.2501 27.9259 27.9446 27L28.5138 26.028C29.7546 25.8057 31.0301 25.4909 32.3404 25.0834C33.6504 24.6759 34.3054 23.6574 34.3054 22.028C34.3054 20.8427 33.8726 19.9677 33.0071 19.403C32.1413 18.838 31.1851 18.5555 30.1388 18.5555C28.9721 18.5555 27.5971 18.7777 26.0138 19.2221C24.4304 19.6666 22.5879 20.236 20.4863 20.9305L19.7779 18.2363C21.9074 17.5418 23.8193 16.9585 25.5138 16.4863C27.2082 16.0141 28.7546 15.778 30.1529 15.778C31.9768 15.778 33.5879 16.3242 34.9863 17.4167C36.3843 18.5092 37.0833 20.037 37.0833 22C37.0833 22.7314 36.956 23.4421 36.7013 24.1321C36.4468 24.8218 36.0881 25.4445 35.625 26C36.875 26.0648 37.9167 26.5255 38.75 27.3821C39.5833 28.2385 40 29.3102 40 30.5971C40 31.8935 39.5532 33.0093 38.6596 33.9446C37.7663 34.8796 36.6482 35.3471 35.3054 35.3471C34.4907 35.3471 33.7476 35.1596 33.0763 34.7846C32.4051 34.4096 31.8565 33.8842 31.4304 33.2084C30.949 34.4306 30.1968 35.4167 29.1738 36.1667C28.1504 36.9167 26.9675 37.2917 25.625 37.2917ZM35.3196 32.5696C35.8474 32.5696 36.2964 32.3821 36.6667 32.0071C37.037 31.6321 37.2221 31.1714 37.2221 30.625C37.2221 30.0973 37.03 29.6343 36.6458 29.2363C36.2617 28.838 35.8057 28.6388 35.2779 28.6388C34.7501 28.6388 34.294 28.831 33.9096 29.2155C33.5254 29.5996 33.3333 30.0556 33.3333 30.5834C33.3333 31.1112 33.5324 31.5741 33.9304 31.9721C34.3288 32.3705 34.7918 32.5696 35.3196 32.5696Z"
            fill="white"
          />
        </g>
        <defs>
          <clipPath id="clip0_66_8">
            <rect width="40" height="40" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    text: "Business and Finance",
    svgBgColor: "#EB6FE9",
    cardBgColor: "#FBE6FB",
    svg: (
      <svg
        width="40"
        height="40"
        viewBox="0 0 40 40"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M5 35V31.7779L7.77792 29V35H5ZM11.8054 35V25.1113L14.5833 22.3333V35H11.8054ZM18.6113 35V22.3333L21.3888 25.1529V35H18.6113ZM25.4167 35V25.1529L28.1946 22.375V35H25.4167ZM32.2221 35V18.4446L35 15.6667V35H32.2221ZM5 25.5696V21.6388L16.6667 10.0279L23.3333 16.6946L35 5V8.93042L23.3333 20.625L16.6667 13.9583L5 25.5696Z"
          fill="white"
        />
      </svg>
    ),
  },
  {
    text: "IT & Software",
    svgBgColor: "#FF8686",
    cardBgColor: "#FDF4E0",
    svg: (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M10.1518 3.375H25.8482C27.0674 3.37499 28.0508 3.37498 28.8472 3.44005C29.6672 3.50704 30.3874 3.64858 31.0537 3.98809C32.1121 4.52738 32.9726 5.38789 33.5119 6.4463C33.8514 7.11263 33.993 7.83284 34.06 8.6528C34.125 9.44916 34.125 10.4326 34.125 11.6518V18.3482C34.125 19.5674 34.125 20.5508 34.06 21.3472C33.993 22.1672 33.8514 22.8874 33.5119 23.5537C32.9726 24.6121 32.1121 25.4726 31.0537 26.0119C30.3874 26.3514 29.6672 26.493 28.8472 26.56C28.0508 26.625 27.0674 26.625 25.8482 26.625H10.1518C8.93257 26.625 7.94916 26.625 7.1528 26.56C6.33284 26.493 5.61263 26.3514 4.9463 26.0119C3.88789 25.4726 3.02738 24.6121 2.48809 23.5537C2.14858 22.8874 2.00704 22.1672 1.94005 21.3472C1.87498 20.5508 1.87499 19.5674 1.875 18.3482V11.6518C1.87499 10.4326 1.87498 9.44916 1.94005 8.6528C2.00704 7.83284 2.14858 7.11263 2.48809 6.4463C3.02738 5.38789 3.88789 4.52738 4.9463 3.98809C5.61263 3.64858 6.33284 3.50704 7.1528 3.44005C7.94916 3.37498 8.93258 3.37499 10.1518 3.375ZM7.33602 5.68257C6.65521 5.7382 6.26406 5.84189 5.96778 5.99285C5.33274 6.31643 4.81643 6.83274 4.49285 7.46778C4.34189 7.76406 4.2382 8.15521 4.18257 8.83602C4.12588 9.52997 4.125 10.4213 4.125 11.7V18.3C4.125 19.5787 4.12588 20.47 4.18257 21.164C4.2382 21.8448 4.34189 22.2359 4.49285 22.5322C4.81643 23.1673 5.33274 23.6836 5.96778 24.0071C6.26406 24.1581 6.65521 24.2618 7.33602 24.3174C8.02997 24.3741 8.92132 24.375 10.2 24.375H25.8C27.0787 24.375 27.97 24.3741 28.664 24.3174C29.3448 24.2618 29.7359 24.1581 30.0322 24.0071C30.6673 23.6836 31.1836 23.1673 31.5071 22.5322C31.6581 22.2359 31.7618 21.8448 31.8174 21.164C31.8741 20.47 31.875 19.5787 31.875 18.3V11.7C31.875 10.4213 31.8741 9.52997 31.8174 8.83602C31.7618 8.15521 31.6581 7.76406 31.5071 7.46778C31.1836 6.83274 30.6673 6.31643 30.0322 5.99285C29.7359 5.84189 29.3448 5.7382 28.664 5.68257C27.97 5.62588 27.0787 5.625 25.8 5.625H10.2C8.92132 5.625 8.02997 5.62588 7.33602 5.68257ZM18 31.125C15.786 31.125 13.697 31.6257 11.8442 32.5144C11.284 32.7831 10.6121 32.5467 10.3434 31.9865C10.0747 31.4263 10.311 30.7543 10.8712 30.4856C13.0228 29.4537 15.4439 28.875 18 28.875C20.5561 28.875 22.9772 29.4537 25.1288 30.4856C25.689 30.7543 25.9253 31.4263 25.6566 31.9865C25.3879 32.5467 24.716 32.7831 24.1558 32.5144C22.303 31.6257 20.214 31.125 18 31.125Z"
          fill="white"
        />
      </svg>
    ),
  },
];

const starSvg = (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M5.825 21L7.45 13.975L2 9.25L9.2 8.625L12 2L14.8 8.625L22 9.25L16.55 13.975L18.175 21L12 17.275L5.825 21Z"
      fill="#F19E39"
    />
  </svg>
);

const courses = [
  {
    level: "Beginner",
    title: "Build Responsive Real-World Websites with HTML and CSS",
    rating: 5.0,
    price: 29.9,
    lessons: 8,
    students: 20,
    image: courseImage1,
  },
  {
    level: "Intermediate",
    title: "JavaScript Mastery: ES6+ and DOM Manipulation",
    rating: 4.9,
    price: 44.5,
    lessons: 14,
    students: 37,
    includesCertificate: true,
    image: courseImage2,
  },
  {
    level: "Advanced",
    title: "Full-Stack Development with React & Node.js",
    rating: 4.95,
    price: 59.99,
    lessons: 22,
    students: 63,
    isBestseller: true,
    languages: ["JavaScript", "JSX", "SQL"],
    image: courseImage3,
  },
];

const storySlides = [
  {
    bigImage: storyImage1big,
    smallImage: storyImage1small,
    name: "Rebecca Taylor",
    job: "Designer at Google",
    message:
      "Within three months of completing it, I landed my dream job at Google. The hands-on projects and mentor feedback were invaluable.",
  },
  {
    bigImage: storyImage2big,
    smallImage: storyImage2small,
    name: "David Martinez",
    job: "Stack Developer at Microsoft",
    message:
      "I was a marketing specialist with no coding experience. The Full-Stack Web Development course gave me the skills to completely change my career path. The community support was amazing",
  },
  {
    bigImage: storyImage3big,
    smallImage: storyImage3small,
    name: "Jennifer Lee",
    job: "Scientist at Amazon",
    message:
      "As a business analyst, I wanted to advance my career with data science skills. This platform provided exactly what I needed. The curriculum was comprehensive and the projects were challenging but rewarding.",
  },
];

const newCoursesSlides = [
  {
    image: courseImage1,
    time: 18,
    title: "Advanced Data Analysis Course With Practicals",
    description:
      "Master Python, SQL, and machine learning to extract powerful insights from complex datasets.",
  },
  {
    image: courseImage2,
    time: 12,
    title: "Full-Stack Web Development Bootcamp",
    description:
      "Become a full-stack developer with hands-on projects in HTML, CSS, JavaScript, and React.",
  },
  {
    image: courseImage3,
    time: 24,
    title: "AI and Machine Learning Fundamentals",
    description:
      "Learn the basics of AI and machine learning with practical applications in Python.",
  },
];

function LandingPageMain() {
  const navigate = useNavigate();
  return (
    <div className={styles.main}>
      <Hero navigate={navigate} trustedImages={trustedImages} />
      <AccreditationSection />
      <CategoriesSection />
      <AboutSection />
      <CoursesSection />
      <StorySection />
      <BlogSection />
    </div>
  );
}

function BlogSection() {
  return (
    <div className={styles.blogSection}>
      <div className={styles.blogSectionContainer}>
        <div className={styles.blogSectionTitle}>
          <p>LATEST ARTICLES</p>
        </div>
        <div className={styles.blogSectionHeader}>
          <h2>Stay Updated on Latest News</h2>
        </div>
        <div className={styles.blogSectionBody}>
          <div className={styles.blogSectionBodyContainer}>
            {blogs.map((blog) => (
              <BlogCard
                title={blog.title}
                image={blog.image}
                description={blog.description}
                comments={blog.comments}
                time={blog.time}
              />
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

function BlogCard({ title, comments, image, description, time }) {
  return (
    <div className={styles.blogCard}>
      <div className={styles.blogCardContainer}>
        <div className={styles.blogCardTop}>
          <img src={image} alt="blogImage" />
        </div>
        <div className={styles.blogCardBottom}>
          <div className={styles.blogCardBottomContainer}>
            <div className={styles.blogOnlineStatus}>
              <p>ONLINE</p>
            </div>
            <div className={styles.blogTitle}>
              <h3>{title}</h3>
            </div>
            <div className={styles.blogStats}>
              <div className={styles.blogTime}>
                <span>
                  <svg
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5 22C4.45 22 3.97917 21.8042 3.5875 21.4125C3.19583 21.0208 3 20.55 3 20V6C3 5.45 3.19583 4.97917 3.5875 4.5875C3.97917 4.19583 4.45 4 5 4H6V2H8V4H16V2H18V4H19C19.55 4 20.0208 4.19583 20.4125 4.5875C20.8042 4.97917 21 5.45 21 6V20C21 20.55 20.8042 21.0208 20.4125 21.4125C20.0208 21.8042 19.55 22 19 22H5ZM5 20H19V10H5V20ZM5 8H19V6H5V8ZM12 14C11.7167 14 11.4792 13.9042 11.2875 13.7125C11.0958 13.5208 11 13.2833 11 13C11 12.7167 11.0958 12.4792 11.2875 12.2875C11.4792 12.0958 11.7167 12 12 12C12.2833 12 12.5208 12.0958 12.7125 12.2875C12.9042 12.4792 13 12.7167 13 13C13 13.2833 12.9042 13.5208 12.7125 13.7125C12.5208 13.9042 12.2833 14 12 14ZM8 14C7.71667 14 7.47917 13.9042 7.2875 13.7125C7.09583 13.5208 7 13.2833 7 13C7 12.7167 7.09583 12.4792 7.2875 12.2875C7.47917 12.0958 7.71667 12 8 12C8.28333 12 8.52083 12.0958 8.7125 12.2875C8.90417 12.4792 9 12.7167 9 13C9 13.2833 8.90417 13.5208 8.7125 13.7125C8.52083 13.9042 8.28333 14 8 14ZM16 14C15.7167 14 15.4792 13.9042 15.2875 13.7125C15.0958 13.5208 15 13.2833 15 13C15 12.7167 15.0958 12.4792 15.2875 12.2875C15.4792 12.0958 15.7167 12 16 12C16.2833 12 16.5208 12.0958 16.7125 12.2875C16.9042 12.4792 17 12.7167 17 13C17 13.2833 16.9042 13.5208 16.7125 13.7125C16.5208 13.9042 16.2833 14 16 14ZM12 18C11.7167 18 11.4792 17.9042 11.2875 17.7125C11.0958 17.5208 11 17.2833 11 17C11 16.7167 11.0958 16.4792 11.2875 16.2875C11.4792 16.0958 11.7167 16 12 16C12.2833 16 12.5208 16.0958 12.7125 16.2875C12.9042 16.4792 13 16.7167 13 17C13 17.2833 12.9042 17.5208 12.7125 17.7125C12.5208 17.9042 12.2833 18 12 18ZM8 18C7.71667 18 7.47917 17.9042 7.2875 17.7125C7.09583 17.5208 7 17.2833 7 17C7 16.7167 7.09583 16.4792 7.2875 16.2875C7.47917 16.0958 7.71667 16 8 16C8.28333 16 8.52083 16.0958 8.7125 16.2875C8.90417 16.4792 9 16.7167 9 17C9 17.2833 8.90417 17.5208 8.7125 17.7125C8.52083 17.9042 8.28333 18 8 18ZM16 18C15.7167 18 15.4792 17.9042 15.2875 17.7125C15.0958 17.5208 15 17.2833 15 17C15 16.7167 15.0958 16.4792 15.2875 16.2875C15.4792 16.0958 15.7167 16 16 16C16.2833 16 16.5208 16.0958 16.7125 16.2875C16.9042 16.4792 17 16.7167 17 17C17 17.2833 16.9042 17.5208 16.7125 17.7125C16.5208 17.9042 16.2833 18 16 18Z"
                      fill="#25CEC0"
                    />
                  </svg>
                </span>
                <p>{time}</p>
              </div>
              <div className={styles.blogComments}>
                <span>
                  <svg
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M22 22L18 18H8C7.45 18 6.97917 17.8042 6.5875 17.4125C6.19583 17.0208 6 16.55 6 16V15H17C17.55 15 18.0208 14.8042 18.4125 14.4125C18.8042 14.0208 19 13.55 19 13V6H20C20.55 6 21.0208 6.19583 21.4125 6.5875C21.8042 6.97917 22 7.45 22 8V22ZM4 12.175L5.175 11H15V4H4V12.175ZM2 17V4C2 3.45 2.19583 2.97917 2.5875 2.5875C2.97917 2.19583 3.45 2 4 2H15C15.55 2 16.0208 2.19583 16.4125 2.5875C16.8042 2.97917 17 3.45 17 4V11C17 11.55 16.8042 12.0208 16.4125 12.4125C16.0208 12.8042 15.55 13 15 13H6L2 17Z"
                      fill="#45F3E5"
                    />
                  </svg>
                </span>
                <p>com {comments}</p>
              </div>
            </div>
            <div className={styles.blogDescription}>
              <p>{description}</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

function StorySection() {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [pauseSlides, setPauseSlides] = useState(false);

  const handlePrevSlide = () => {
    setCurrentIndex(
      (prev) => (prev - 1 + storySlides.length) % storySlides.length
    );
  };
  const handleNextSlide = () => {
    setCurrentIndex((prev) => (prev + 1) % storySlides.length);
  };

  return (
    <div className={styles.storySection}>
      <div className={styles.storySectionContainer}>
        <div className={styles.storySectionTitle}>
          <h2>Student Success Stories</h2>
        </div>
        <div className={styles.storySectionHeader}>
          <p>
            Hear from our students who have transformed their careers through
            our platform.
          </p>
        </div>
        <div
          onMouseEnter={() => setPauseSlides(true)}
          onMouseLeave={() => setPauseSlides(false)}
          className={styles.storySectionBody}
        >
          <StorySlider
            pauseSlides={pauseSlides}
            setPauseSlides={setPauseSlides}
            currentIndex={currentIndex}
            setCurrentIndex={setCurrentIndex}
            slides={storySlides}
          />
          <div
            role="button"
            onClick={handlePrevSlide}
            className={styles.leftArrow}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              height="24px"
              viewBox="0 -960 960 960"
              width="24px"
              fill="currentColor"
            >
              <path d="M560-240 320-480l240-240 56 56-184 184 184 184-56 56Z" />
            </svg>
          </div>
          <div
            role="button"
            onClick={handleNextSlide}
            className={styles.rightArrow}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              height="24px"
              viewBox="0 -960 960 960"
              width="24px"
              fill="currentColor"
            >
              <path d="M504-480 320-664l56-56 240 240-240 240-56-56 184-184Z" />
            </svg>
          </div>
        </div>
      </div>
    </div>
  );
}

function StorySlider({
  currentIndex,
  setCurrentIndex,
  intervalTime = 3000,
  slides,
  pauseSlides,
  // setPauseSlides,
}) {
  useEffect(
    function () {
      // Automatically change slides every intervalTime milliseconds
      if (pauseSlides) return;
      if (slides.length === 0) return;
      const intervalId = setInterval(() => {
        setCurrentIndex((prev) => (prev + 1) % slides.length);
      }, intervalTime);
      return () => clearInterval(intervalId);
    },
    [intervalTime, pauseSlides, setCurrentIndex, slides.length]
  );

  return (
    <div
      className={styles.sliderTrack}
      style={{
        transform: `translateX(-${currentIndex * 100}%)`,
        // transition: "transform 0.5s ease-in-out",
      }}
    >
      {slides.map((slide, index) => (
        <div
          key={index}
          className={styles.slide}
          style={{
            opacity: `${index === currentIndex ? "1" : "0"}`,
            transition: `opacity 0.5s ease-in-out`,
          }}
        >
          <img src={slide.bigImage} alt="story-image" />
          <div className={styles.storyImageLayer}>
            <div className={styles.profileImage}>
              <div className={styles.imageContainer}>
                <img src={slide.smallImage} alt="storyProfile" />
              </div>
            </div>
            <div className={styles.storyName}>
              <h3>{slide.name}</h3>
            </div>
            <div className={styles.storyJob}>
              <p>{slide.job}</p>
            </div>
            <div className={styles.storyMessage}>
              <p>{slide.message}</p>
            </div>
          </div>
        </div>
      ))}
    </div>
  );
}

function CoursesSection() {
  return (
    <div className={styles.coursesSection}>
      <div className={styles.coursesSectionContainer}>
        <div className={styles.coursesTitle}>
          <img src={graduationCapImage} alt="graduation-cap" />
          <p>Featured Courses</p>
        </div>
        <div className={styles.coursesHeader}>
          <h2>A broad selection of courses</h2>
        </div>
        <div className={styles.coursesBody}>
          {courses.map((course) => (
            <CourseCard
              title={course.title}
              level={course.level}
              lessons={course.lessons}
              students={course.students}
              price={course.price}
              rating={course.rating}
              image={course.image}
            />
          ))}
        </div>
        <div className={styles.browseMoreCourses}>
          <button>
            Browse more courses
            <span>
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M14 18L12.6 16.55L16.15 13H4V11H16.15L12.6 7.45L14 6L20 12L14 18Z"
                  fill="white"
                />
              </svg>
            </span>
          </button>
        </div>
      </div>
    </div>
  );
}

function CourseCard({ image, title, price, level, students, lessons, rating }) {
  return (
    <div className={styles.courseCard}>
      <div className={styles.courseCardTop}>
        <img src={image} alt="course-image" />
      </div>
      <div className={styles.courseCardBottom}>
        <div className={styles.courseCardBottomContainer}>
          <div className={styles.courseLevel}>
            <p>{level}</p>
          </div>
          <div className={styles.courseDescription}>
            <p>{title}</p>
          </div>
          <div className={styles.courseRating}>
            <span>{Array.from({ length: 5 }).map(() => starSvg)}</span>
            <p>({rating}/7 Rating)</p>
          </div>
          <div className={styles.coursePrice}>
            <p>${price}</p>
          </div>
          <div className={styles.courseStats}>
            <div className={styles.lessons}>
              <svg
                width="18"
                height="18"
                viewBox="0 0 18 18"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M5.625 16.5C4.9 16.5 4.28125 16.2438 3.76875 15.7313C3.25625 15.2188 3 14.6 3 13.875V4.125C3 3.4 3.25625 2.78125 3.76875 2.26875C4.28125 1.75625 4.9 1.5 5.625 1.5H15V12.75C14.6875 12.75 14.4219 12.8594 14.2031 13.0781C13.9844 13.2969 13.875 13.5625 13.875 13.875C13.875 14.1875 13.9844 14.4531 14.2031 14.6719C14.4219 14.8906 14.6875 15 15 15V16.5H5.625ZM4.5 11.4938C4.675 11.4062 4.85625 11.3438 5.04375 11.3063C5.23125 11.2688 5.425 11.25 5.625 11.25H6V3H5.625C5.3125 3 5.04687 3.10938 4.82812 3.32813C4.60937 3.54688 4.5 3.8125 4.5 4.125V11.4938ZM7.5 11.25H13.5V3H7.5V11.25ZM5.625 15H12.6187C12.5437 14.825 12.4844 14.6469 12.4406 14.4656C12.3969 14.2844 12.375 14.0875 12.375 13.875C12.375 13.675 12.3937 13.4813 12.4312 13.2938C12.4687 13.1063 12.5312 12.925 12.6187 12.75H5.625C5.3 12.75 5.03125 12.8594 4.81875 13.0781C4.60625 13.2969 4.5 13.5625 4.5 13.875C4.5 14.2 4.60625 14.4688 4.81875 14.6813C5.03125 14.8938 5.3 15 5.625 15Z"
                  fill="#D9D9D9"
                />
              </svg>
              <p>{lessons} Lessons</p>
            </div>
            <div className={styles.students}>
              <svg
                width="18"
                height="18"
                viewBox="0 0 18 18"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M0 13.5V12.3188C0 11.7813 0.275 11.3438 0.825 11.0063C1.375 10.6688 2.1 10.5 3 10.5C3.1625 10.5 3.31875 10.5031 3.46875 10.5094C3.61875 10.5156 3.7625 10.5313 3.9 10.5563C3.725 10.8188 3.59375 11.0938 3.50625 11.3813C3.41875 11.6688 3.375 11.9688 3.375 12.2813V13.5H0ZM4.5 13.5V12.2813C4.5 11.8813 4.60938 11.5156 4.82812 11.1844C5.04688 10.8531 5.35625 10.5625 5.75625 10.3125C6.15625 10.0625 6.63438 9.875 7.19063 9.75C7.74688 9.625 8.35 9.5625 9 9.5625C9.6625 9.5625 10.2719 9.625 10.8281 9.75C11.3844 9.875 11.8625 10.0625 12.2625 10.3125C12.6625 10.5625 12.9688 10.8531 13.1813 11.1844C13.3938 11.5156 13.5 11.8813 13.5 12.2813V13.5H4.5ZM14.625 13.5V12.2813C14.625 11.9563 14.5844 11.65 14.5031 11.3625C14.4219 11.075 14.3 10.8063 14.1375 10.5563C14.275 10.5313 14.4156 10.5156 14.5594 10.5094C14.7031 10.5031 14.85 10.5 15 10.5C15.9 10.5 16.625 10.6656 17.175 10.9969C17.725 11.3281 18 11.7688 18 12.3188V13.5H14.625ZM6.09375 12H11.925C11.8 11.75 11.4531 11.5313 10.8844 11.3438C10.3156 11.1563 9.6875 11.0625 9 11.0625C8.3125 11.0625 7.68438 11.1563 7.11563 11.3438C6.54688 11.5313 6.20625 11.75 6.09375 12ZM3 9.75C2.5875 9.75 2.23438 9.60313 1.94063 9.30938C1.64688 9.01562 1.5 8.6625 1.5 8.25C1.5 7.825 1.64688 7.46875 1.94063 7.18125C2.23438 6.89375 2.5875 6.75 3 6.75C3.425 6.75 3.78125 6.89375 4.06875 7.18125C4.35625 7.46875 4.5 7.825 4.5 8.25C4.5 8.6625 4.35625 9.01562 4.06875 9.30938C3.78125 9.60313 3.425 9.75 3 9.75ZM15 9.75C14.5875 9.75 14.2344 9.60313 13.9406 9.30938C13.6469 9.01562 13.5 8.6625 13.5 8.25C13.5 7.825 13.6469 7.46875 13.9406 7.18125C14.2344 6.89375 14.5875 6.75 15 6.75C15.425 6.75 15.7813 6.89375 16.0688 7.18125C16.3563 7.46875 16.5 7.825 16.5 8.25C16.5 8.6625 16.3563 9.01562 16.0688 9.30938C15.7813 9.60313 15.425 9.75 15 9.75ZM9 9C8.375 9 7.84375 8.78125 7.40625 8.34375C6.96875 7.90625 6.75 7.375 6.75 6.75C6.75 6.1125 6.96875 5.57812 7.40625 5.14688C7.84375 4.71563 8.375 4.5 9 4.5C9.6375 4.5 10.1719 4.71563 10.6031 5.14688C11.0344 5.57812 11.25 6.1125 11.25 6.75C11.25 7.375 11.0344 7.90625 10.6031 8.34375C10.1719 8.78125 9.6375 9 9 9ZM9 7.5C9.2125 7.5 9.39062 7.42813 9.53438 7.28438C9.67813 7.14062 9.75 6.9625 9.75 6.75C9.75 6.5375 9.67813 6.35938 9.53438 6.21563C9.39062 6.07188 9.2125 6 9 6C8.7875 6 8.60938 6.07188 8.46563 6.21563C8.32188 6.35938 8.25 6.5375 8.25 6.75C8.25 6.9625 8.32188 7.14062 8.46563 7.28438C8.60938 7.42813 8.7875 7.5 9 7.5Z"
                  fill="#D9D9D9"
                />
              </svg>
              <p>{students} Students</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

function AboutSection() {
  return (
    <div className={styles.aboutSection}>
      <div className={styles.aboutSectionContainer}>
        <div className={styles.aboutSectionLeft}>
          <div className={styles.imageWhiteCap}></div>
          <img src={aboutImage} alt="about-image" />
        </div>
        <div className={styles.aboutSectionRight}>
          <div className={styles.aboutSectionRightContainer}>
            <svg
              className={styles.aboutRing}
              width="100"
              height="100"
              viewBox="0 0 100 100"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clip-path="url(#clip0_82_2)">
                <path
                  d="M50 92.5C73.4721 92.5 92.5 73.4721 92.5 50C92.5 26.5279 73.4721 7.5 50 7.5C26.5279 7.5 7.5 26.5279 7.5 50C7.5 73.4721 26.5279 92.5 50 92.5Z"
                  stroke="#F8B81F"
                  stroke-width="15"
                />
              </g>
              <defs>
                <clipPath id="clip0_82_2">
                  <rect width="100" height="100" fill="white" />
                </clipPath>
              </defs>
            </svg>

            <p className={styles.aboutTitle}>ABOUT</p>
            <h2 className={styles.aboutHeader}>
              Best Platform for <span>Distant Learning</span> and Skill
              Development
            </h2>
            <p className={styles.aboutDescription}>
              We brings together industry experts and cutting-edge technology to
              deliver courses that bridge the gap between learning and
              real-world success.
            </p>
            <div className={styles.aboutPoints}>
              <AboutPoint text="Expert Trainers" />
              <AboutPoint text="Online Remote Learning" />
              <AboutPoint text="Lifetime Access" />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

function AboutPoint({ text }) {
  return (
    <div className={styles.aboutPoint}>
      <svg
        width="30"
        height="30"
        viewBox="0 0 30 30"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M8.91662 22.4584L1.896 15.4375L3.38537 13.9584L8.92725 19.5L10.4063 20.9791L8.91662 22.4584ZM14.8126 22.4584L7.79162 15.4375L9.271 13.9478L14.8126 19.4897L26.646 7.65625L28.1251 9.14594L14.8126 22.4584ZM14.8126 16.5625L13.3229 15.0834L20.7397 7.66656L22.2291 9.14594L14.8126 16.5625Z"
          fill="#F0B21E"
        />
      </svg>
      <p>{text}</p>
    </div>
  );
}

function CategoriesSection() {
  return (
    <div className={styles.categoriesSection}>
      <div className={styles.categoriesSectionContainer}>
        <div className={styles.categoriesTitle}>
          <img src={graduationCapImage} alt="graduation-cap" />
          <p>Top Categories</p>
        </div>
        <div className={styles.categoriesHeader}>
          <h2>Explore Courses by Field</h2>
        </div>
        <div className={styles.categoriesBody}>
          {categories.map((item) => (
            <CategoryCard
              text={item.text}
              svgBgColor={item.svgBgColor}
              cardBgColor={item.cardBgColor}
              svg={item.svg}
            />
          ))}
        </div>
      </div>
    </div>
  );
}

function CategoryCard({ text, svgBgColor, cardBgColor, svg }) {
  return (
    <div
      style={{ backgroundColor: cardBgColor }}
      className={styles.categoryCard}
    >
      <div className={styles.categoryCardLeft}>
        <p>{text}</p>
      </div>
      <div className={styles.categoryCardRight}>
        <span>{svg}</span>
        <svg
          width="64"
          height="64"
          viewBox="0 0 64 64"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M59.4953 32.0006C72.1292 7.29787 56.6698 -8.11304 31.9995 4.5047C7.29678 -8.12918 -8.11414 7.33017 4.5036 32.0006C-8.13028 56.7032 7.33714 72.1141 31.9995 59.4964C56.7021 72.1303 72.113 56.6629 59.4953 32.0006Z"
            fill={svgBgColor}
          />
        </svg>
      </div>
    </div>
  );
}

function AccreditationSection() {
  return (
    <div className={styles.accreditationSection}>
      <div className={styles.accreditationContainer}>
        <div className={styles.accreditationBadge}>
          <img src={awardIcon} alt="Award Icon" />
        </div>
        <div className={styles.accreditationText}>
          <p>
            Trusted by thousands of students and organizations across the globe
          </p>
        </div>
        <div className={styles.accreditationTitle}>
          <h2>
            Online <span>Intensive Classes</span> for Online Learning
          </h2>
        </div>
        <div className={styles.accreditationCards}>
          {whyChooseUsArr.map((item) => (
            <AccreditationCard
              svg={item.svg}
              title={item.title}
              description={item.description}
            />
          ))}
        </div>
      </div>
    </div>
  );
}

function AccreditationCard({ svg, title, description }) {
  return (
    <div className={styles.accreditationCard}>
      <div className={styles.svgContainer}>{svg}</div>
      <h4>{title}</h4>
      <p>{description}</p>
    </div>
  );
}

function Hero({ trustedImages, navigate }) {
  const [currentIndex, setCurrentIndex] = useState(0);
  return (
    <div className={styles.hero}>
      <div className={styles.mainLayerImage}>
        <div className={styles.heroLeft}>
          <div className={styles.heroLeftContainer}>
            <h1>
              Master New <span className={clsx(styles.spanSkills)}>Skills</span>{" "}
              With Interactive{" "}
              <span className={clsx(styles.spanLearning)}>Learning</span>
            </h1>
            <p>
              Join thousands of learners worldwide and achieve your goals at
              your own pace, from coding to creativity.
            </p>
            <div className={styles.heroBtns}>
              <button
                onClick={() => navigate("auth")}
                className={clsx(styles.getStartedBtn)}
              >
                Join Us Now
              </button>
              <button className={clsx(styles.learnMoreBtn)}>
                Learn More{" "}
                <span>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    height="24px"
                    viewBox="0 -960 960 960"
                    width="24px"
                    fill="#AA0E6C"
                  >
                    <path d="M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h280v80H200v560h560v-280h80v280q0 33-23.5 56.5T760-120H200Zm188-212-56-56 372-372H560v-80h280v280h-80v-144L388-332Z" />
                  </svg>
                </span>
              </button>
            </div>
          </div>
        </div>
        <img src={heroImage} alt="hero" />
        <div className={styles.heroRight}>
          <div className={styles.heroRightContainer}>
            <div className={styles.heroRightTop}>
              <HeroCourseCard
                currentIndex={currentIndex}
                setCurrentIndex={setCurrentIndex}
              />
              <div className={styles.progressDots}>
                {newCoursesSlides.map((_, index) => (
                  <ProgressDot isActive={index === currentIndex} />
                ))}
              </div>
            </div>
            <div className={styles.heroRightBottom}>
              <div className={styles.trustedLeft}>
                {trustedImages.map((image) => (
                  <TrustedCircle image={image} />
                ))}
              </div>
              <div className={styles.trustedRight}>
                <p>Trusted by 100K+ Students</p>
                <div className={styles.starsContainer}>
                  <svg
                    className={styles.firstStar}
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5.825 21L7.45 13.975L2 9.25L9.2 8.625L12 2L14.8 8.625L22 9.25L16.55 13.975L18.175 21L12 17.275L5.825 21Z"
                      fill="#F19E39"
                    />
                  </svg>
                  <svg
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5.825 21L7.45 13.975L2 9.25L9.2 8.625L12 2L14.8 8.625L22 9.25L16.55 13.975L18.175 21L12 17.275L5.825 21Z"
                      fill="#F19E39"
                    />
                  </svg>
                  <svg
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5.825 21L7.45 13.975L2 9.25L9.2 8.625L12 2L14.8 8.625L22 9.25L16.55 13.975L18.175 21L12 17.275L5.825 21Z"
                      fill="#F19E39"
                    />
                  </svg>
                  <svg
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5.825 21L7.45 13.975L2 9.25L9.2 8.625L12 2L14.8 8.625L22 9.25L16.55 13.975L18.175 21L12 17.275L5.825 21Z"
                      fill="#F19E39"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

function TrustedCircle({ image }) {
  return (
    <div className={styles.trustedCircle}>
      <img src={image} alt="trusted" />
    </div>
  );
}

function ProgressDot({ isActive }) {
  return (
    <div
      className={clsx(styles.dot)}
      style={{ backgroundColor: `${isActive ? "gray" : ""}` }}
    ></div>
  );
}

function HeroCourseCard({
  intervalTime = 3000,
  currentIndex,
  setCurrentIndex,
}) {
  useEffect(
    function () {
      if (newCoursesSlides.length === 0) return;
      const intervalId = setInterval(() => {
        setCurrentIndex((prev) => (prev + 1) % newCoursesSlides.length);
      }, intervalTime);
      return () => clearInterval(intervalId);
    },
    [intervalTime, setCurrentIndex]
  );
  return (
    <div
      className={styles.heroCourseSlideTrack}
      style={{
        transform: `translateX(-${currentIndex * 100}%)`,
        transition: `transform 0.5s ease-in-out`,
      }}
    >
      {newCoursesSlides.map((course) => (
        <div className={styles.heroCourseCard}>
          <div className={styles.newBadge}>New</div>
          <div className={styles.heroCourseCardTop}>
            <div className={styles.heroCourseCardTopContainer}>
              <img src={course.image} alt="hero-course" />
            </div>
          </div>
          <div className={styles.heroCourseCardBottom}>
            <div className={styles.heroCourseCardBottomContainer}>
              <p className={styles.courseDuration}>{course.time}+ hours</p>
              <h3 className={styles.courseName}>{course.title}</h3>
              <p className={styles.courseDescription}>{course.description}</p>
            </div>
          </div>
        </div>
      ))}
    </div>
  );
}

export default LandingPageMain;
